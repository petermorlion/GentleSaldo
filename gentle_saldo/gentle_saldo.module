<?php

/**
* @file
* A custom module for Gentle Ultimate Frisbee and how much the members have to pay.
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function gentle_saldo_help($path, $arg) {
  switch ($path) {
    case "admin/help#gentle_saldo":
      return '<p>' . t("A custom module for Gentle Ultimate Frisbee and how much the members have to pay.") . '</p>';
      break;
  }
}

/**
* Implementation of hook_menu
*/
function gentle_saldo_menu() {
    $items['user/%user/saldo'] = array(
        'title' => t('Saldo'),
        'page callback' => 'gentle_saldo_user_saldo',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_LOCAL_TASK,
        ); 

    $items['admin/gentle_saldo'] = array(
        'title' => 'Saldos',
        'description' => 'Management of the Gentle saldo system.',
        'page callback' => 'gentle_saldo_management',
        'page arguments' => array(1),
        'access arguments' => array('access gentle_saldo'),
        'type' => MENU_NORMAL_ITEM,
    );

    $items['admin/gentle_saldo/saldos'] = array(
        'title' => 'Saldos',
        'description' => 'Management of the Gentle saldo system.',
        'page callback' => 'gentle_saldo_management',
        'page arguments' => array(1),
        'access arguments' => array('access gentle_saldo'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
    );

    $items['admin/gentle_saldo/settings'] = array(
        'title' => 'Instellingen',
        'description' => 'Configuration for the Gentle saldo system.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('gentle_saldo_settings'),
        'access arguments' => array('access gentle_saldo'),
        'type' => MENU_LOCAL_TASK,
    );

    return $items;
}

/**
 * Implementation of hook_admin_validate
 */
function gentle_saldo_admin_validate($form, &$form_state) {
  $email = $form_state['values']['gentle_saldo_email'];
  if (!valid_email_address($email)) {
    form_set_error('gentle_saldo_email', t('You must enter a valid email address.'));
  }
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function gentle_saldo_perm() {
    return array('access gentle_saldo');
}

/**
 * Implementation of hook_permission. Provides the permissions so they can be selected on the Permissions page.
 */
function gentle_saldo_permission() {
    return array(
        'access gentle_saldo' => array(
            'title' => t('Gentle saldos beheren.'),
            'description' => t('Instellingen voor het beheren van de saldos, en het beheren zelf.')
        ) 
    );
}

/**
* Show the saldo of the current user (needs improvements like using the Drupal DB API,...)
*/
function gentle_saldo_user_saldo() {
    $row = "";	
    $query = "select max(id) as id from gentle_saldo_update";
    $rs = db_query($query);

    # iterate over resultset, will be only once as we call the "max()" function
    foreach ($rs as $rs_item) {
	    $row = $rs_item;
    }

    $query = "select * from gentle_saldo_update where id = '".$row->id."'";
    $rs = db_query($query);

    # iterate over saldo_updates item, will be only once as the updateid is a unique primary key
    foreach ($rs as $rs_item) {
	    $row = $rs_item;
    }

    $update_id = $row->id;

    if (!$update_id) {
        $html = t("Er zijn nog geen saldo's beschikbaar");
    } else {
        $html = "";
        $html .= "<h2>" . t("Financieel overzicht: update van ") . date("d-m-Y", $row->date) . "</h2>"; 
        $html .= "<p>" . t("Opmerking: ") . $row->remarks . "</p>";

        $html .= "<table class='gentleTable'>\n\t";
	    $html .= "<tr>\n\t";
	    $html .= "<th align='center'>" . t("Datum") . "</th>\n\t";
	    $html .= "<th align='right'>" . t("Cumul") . "</th>\n\t";
	    $html .= "<th align='right'>" . t("Bedrag") . "</th>\n\t";
	    $html .= "<th align='left'>" . t("Beschrijving") . "</th>\n\t";
	    $html .= "<th align='left'>" . t("Opmerkingen") . "</th>\n\t";
	    $html .= "</tr>\n\t";

        $rs = db_query("SELECT * FROM {gentle_saldo_transaction} WHERE gentle_saldo_update_id = :update_id and uid = :uid order by date, id", array(
            ':update_id' => $update_id,
            ':uid' => $GLOBALS['user']->uid,
        ));
        
	    $cumul = 0;
    
        foreach ($rs as $row) {
		    $html .= "<tr>\n\t";
		    $html .= "<td align='center'>" .date("d-m-Y", $row->date) . "</td>\n\t";
		    $html .= "<td align='right'>" . $cumul . "</td>\n\t";			
		    $html .= "<td align='right'>" . $row->amount . "</td>\n\t";
		    $html .= "<td align='left'>" . $row->description . "</td>\n\t";
		    $html .= "<td align='left'>" . $row->remarks . "</td>\n";
		    $html .= "</tr>\n";

		    $cumul += $row->amount;
	    }
	
	    $html .= "</table>\n\t<br /><br />";
	    $html .= "<strong>" . t("HUIDIG SALDO: ") . $cumul . "</strong>";   
    }

    $html .= "<br /><br />";

    $html .= nl2br(variable_get('gentle_saldo_bank_details', ''));

    return $html;
}

/**
 * The form with settings for the Gentle saldo system.
 */
function gentle_saldo_settings() {
    $form = array();
    $form['gentle_saldo_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Email sender'),
        '#default_value' => variable_get('gentle_saldo_email', variable_get('site_mail', '')),
        '#size' => 128,
        '#maxlength' => 128,
        '#description' => t("The sender of the email members will receive with their saldo update."),
        '#required' => TRUE,
    );
    
    $form['gentle_saldo_bank_details'] = array(
        '#type' => 'textarea',
        '#title' => t('Bankgegevens'),
        '#default_value' => variable_get('gentle_saldo_bank_details', ''),
        '#maxlength' => 600,
        '#description' => t("The bank details so members know how and where to transfer the correct amount. HTML is allowed."),
        '#required' => TRUE,
    );

    return system_settings_form($form);
}

/**
 * The page for managing the Gentle saldos
 */
function gentle_saldo_management() {
    $html = drupal_get_form('gentle_saldo_update_form');
    return $html;
}

/**
 * Returns the form for updating the saldos
 */
function gentle_saldo_update_form() {
    $form = array();
    $form['gentle_saldo_update_form_file'] = array(
        '#type' => 'file', 
        '#title' => t('Saldo file'),
        '#description' => t('Upload the saldo text file here.'),
    );

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
    );

    return $form;
}

/**
 * Validates the form for updating the saldos
 */
function gentle_saldo_update_form_validate($form, &$form_state) {
    // TODO: check if there is a file
}

/**
 * Code executed after submitting the form for updating the saldos
 */
function gentle_saldo_update_form_submit($form, &$form_state) {
    $directory = "public://gentle_saldo";
    $result = file_prepare_directory($directory, FILE_MODIFY_PERMISSIONS | FILE_CREATE_DIRECTORY);
    
    if($result) {
        $save = file_save_upload('gentle_saldo_update_form_file', array(), $directory, true);
        
        if(!$save) {
            drupal_set_message(t('Error uploading file to !dir.', array('!dir' => $directory)), 'error');
        } else {
            drupal_set_message(t('The file (!filename) was successfully uploaded.', array('!filename' => $save->filename)), 'status');
            gentle_saldo_update_saldos($save->uri);
        }

        //variable_set('date_pic_font', $dir . '/' . $file);
    } else {
        drupal_set_message(t('The directory !dir is not accessible. Please contact the site administrator.', array('!dir' => $directory)), 'error');
    }
}

/**
 * Converts a datestring to a timestamp
 */
function gentle_saldo_datestring_to_timestamp($datestring) {
	$tokens = explode(gentle_saldo_delimiter_lookup($datestring), $datestring);
	$timestamp = mktime(0,0,0,$tokens[1],$tokens[0],$tokens[2]);
	return $timestamp;
}

/**
 * Looks up the delimiter
 */
function gentle_saldo_delimiter_lookup($datestring) {
	return ((count(explode("-", $datestring)) > 1) ? '-' : '/');
}

/**
 * Updates all saldos
 */
function gentle_saldo_update_saldos($saldoFileUri) {
    $fp_saldo = fopen($saldoFileUri, 'r');
    $buffer = 4096;
    $total_line_counter = 0;
    $empty_line_counter = 0;
    $cntr = 0;
    $header_processed = false;
    $header = "";
    $date_update = NULL;
    $id_update = "";
    
    $id_speler = "";
    $naam_speler = "";
    $speler_processed = true;


    while(($line = fgets($fp_saldo, $buffer)) ){
	    $total_line_counter++;
	    $line_stripped = preg_replace("/\t/", "", $line); //alle tabs uit lijn weghalen (voor check op lege lijnen)
	    if ($line_stripped != "\n" && $line_stripped != "\r\n"){ // als lijn niet leeg is, lijn processen
		    $tokens = explode("\t", $line);
		    if($header_processed == false){ // header processen en opslaan in db
			    if (preg_match("/\tlaatste update:\t/", $line)){
				    $date_update = gentle_saldo_datestring_to_timestamp($tokens[2]);
			    }
			    elseif (preg_match("/.*naam\tdatum\tcumulatief\tbedrag\tthema\tverwijzing\/opmerking.*/", $line)){
				    $header_processed = true; //header is volledig ingelezen, header schrijven naar db
                    $id_update = db_insert('gentle_saldo_update')
                        ->fields(array(
                            'date' => $date_update,
                            'remarks' => $header,
                        ))
                        ->execute();
			    }
			    else {
				    if (!preg_match("/^spelers saldos$/", trim($line_stripped))){
					    $header.= htmlspecialchars(trim($line, " \t"),ENT_QUOTES, "cp1252");
				    }
			    }
		    }
		    else { //header is geprocessed, nu transacties inlezen en schrijven naar db
                if (trim($tokens[2]) == "totaal"){
				    $speler_processed = true;
			    }
			    else {
				    if ($speler_processed == true){
					    $id_speler = htmlspecialchars(trim($tokens[0]), ENT_QUOTES, "cp1252");
					    $naam_speler = htmlspecialchars(trim($tokens[1]), ENT_QUOTES, "cp1252");
					    $speler_processed = false;
				    }

				    $datum = gentle_saldo_datestring_to_timestamp($tokens[2]);
				    $bedrag = htmlspecialchars(trim(str_replace(",",".",$tokens[4])), ENT_QUOTES, "cp1252");
				    $beschrijving = htmlspecialchars(trim($tokens[5]), ENT_QUOTES, "cp1252");
				    $opmerking = htmlspecialchars(trim($tokens[6]), ENT_QUOTES, "cp1252");

                    if ($id_speler == '') {
                        continue; // TODO: counter on how many were empty?
                    }

                    if (!user_load($id_speler)) {
                        continue; // TODO: counter on how many were skipped?
                    }

                    db_insert('gentle_saldo_transaction')
                        ->fields(array(
                            'uid' => $id_speler,
                            'gentle_saldo_update_id' => $id_update,
                            'date' => $datum,
                            'amount' => $bedrag,
                            'description' => $beschrijving,
                            'remarks' => $opmerking,
                        ))
                        ->execute();
				    $cntr++;			
			    }
		    }
	    }
	    else $empty_line_counter++;
    }
    
    fclose($fp_saldo);
    drupal_set_message(t('Added !counter records from !total_rows (!empty_rows empty rows).', 
        array('!counter' => $cntr, '!total_rows' => $total_line_counter, '!empty_rows' => $empty_line_counter)), 'status');
}